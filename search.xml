<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>最优化理论-0.引言</title>
      <link href="/2023/07/28/%E6%9C%80%E4%BC%98%E5%8C%96%E7%90%86%E8%AE%BA-0-%E5%BC%95%E8%A8%80/"/>
      <url>/2023/07/28/%E6%9C%80%E4%BC%98%E5%8C%96%E7%90%86%E8%AE%BA-0-%E5%BC%95%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>  最优化理论(OptimizationTheory)是一门研究在给定条件下如何寻找最优解的学科。这个学科涵盖了广泛的数学方法和算法，用于解决机器学习、经济学、工程学等领域的各种实际问题。<br>  如今，人工智能与机器学习领域的研究十分火热，而最优化理论是在其中起着至关重要的作用的一门数学学科。在统计机器学习中，很多问题的实质都能用一个最优化模型表示，例如线性判别分析(LinearDiscriminantAnalysis)的思想是将样本从高维空间投影到低维空间，使得不同类别样本之间的距离尽可能大，同一类别样本之间的距离尽可能小，从而完成样本分类的目标。支持向量机(SupportVectorMachine)的思想是在特征空间中找到一个超平面，使得不同类别的样本尽可能远离该超平面，从而实现分类。这些思想都可以用最优化模型表示，且都是一个凸优化问题，可以利用凸优化的方法得到最优解。在深度学习中，我们要通过最小化损失函数得到神经网络的权重参数，这实际上也是一个最优化问题。由于损失函数大多是非凸函数，我们通常使用梯度下降算法来求得近似最优解。<br>  总得来说，最优化理论在当今是一门非常有用的学科，笔者认为对于统计与数据科学领域的学生来说，学好最优化理论是未来开展研究的基础。</p><h2 id="最优化理论的主要内容">最优化理论的主要内容</h2><p>  最优化理论的主要内容包括以下几个方面：<br>-<strong>最优化问题的表述</strong>：最优化问题通常由目标函数和约束条件构成。目标函数是需要最大化或最小化的函数，而约束条件是问题的限制条件。<br>-<strong>最优解的定义</strong>：最优解是指满足约束条件的使得目标函数取得最大值或最小值的变量值。<br>-<strong>凸优化</strong>：凸优化是一类特殊的最优化问题，其中目标函数是凸函数，约束条件是凸集。凸优化问题具有良好的性质，可以高效地求解。<br>-<strong>等式约束与不等式约束</strong>：最优化问题的约束条件可以是等式约束，也可以是不等式约束。等式约束将变量限制在一个子空间内，而不等式约束则将变量限制在一个半空间内。<br>-<strong>无约束优化</strong>：在无约束优化问题中，只需考虑目标函数的最大化或最小化，没有额外的约束条件。<br>-<strong>数值优化方法</strong>：为了求解最优化问题，需要使用各种数值优化方法。常见的数值优化方法包括梯度下降法、牛顿法、共轭梯度法、拟牛顿法等。<br>-<strong>条件极值与全局极值</strong>：最优化问题可能存在多个极值点，包括局部极值和全局极值。局部极值是在某个特定区域内的最优解，而全局极值是在整个定义域内的最优解。<br>-<strong>敏感性分析</strong>：最优化理论还涉及敏感性分析，即研究目标函数和约束条件中参数的微小变化对最优解的影响。<br>-<strong>最优化理论在实际问题中的应用</strong>：最优化理论广泛应用于各个领域，如机器学习中的模型训练、工程中的设计优化、经济学中的资源分配问题等。</p><p>  最优化问题可分为凸优化问题与非凸优化问题，本系列首先会以凸优化为主展开讨论，之后再补充非凸优化的相关方法。</p><h2 id="相关学习资料">相关学习资料</h2><p>  本系列主要参考了以下学习资料：<br>* <a href="https://www.bilibili.com/video/BV19M411T7S7/?vd_source=234cf2ac075a1558881a6956450ddf89">Video:《凸优化》- 凌青 中科大</a><br>* <a href="https://github.com/SXUSongJH/Book">Book1:《最优化：建模、算法与理论》- 刘浩洋等</a><br>* <a href="https://github.com/SXUSongJH/Book">Book2：《ConvexAnalysis》- Stephen Boyd</a></p><p>  本系列首先会参考凌青老师的课程，介绍凸优化的基础知识，然后以另外两本书作为补充，介绍一些课程中没有提及的知识以及非凸优化的方法。</p>]]></content>
      
      
      <categories>
          
          <category> 最优化理论 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>矩阵分析-1.线性空间</title>
      <link href="/2023/07/26/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90-1-%E7%BA%BF%E6%80%A7%E7%A9%BA%E9%97%B4/"/>
      <url>/2023/07/26/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90-1-%E7%BA%BF%E6%80%A7%E7%A9%BA%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="线性空间">线性空间</h1><h2 id="加法与数乘">加法与数乘</h2><p><strong>加法的定义</strong><br>  给定非空集合V和数域<span class="math inline">\(\mathbb{F}\)</span>，若存在映射：<br><span class="math display">\[\sigma: V \times V \rightarrowV\]</span></p><p><span class="math display">\[(\alpha,\beta) \mapsto\sigma(\alpha,\beta)\]</span></p><p>即对V中任意元素<span class="math inline">\(\alpha\)</span>，<span class="math inline">\(\beta\)</span>，在集合V中都存在唯一元素<span class="math inline">\(\gamma\)</span>,使得<span class="math inline">\(\gamma=\alpha+\beta \in V\)</span>，则称映射<span class="math inline">\(\sigma\)</span>为集合V上的加法。</p><p><strong>数乘的定义</strong><br>  给定非空集合V和数域<span class="math inline">\(\mathbb{F}\)</span>，若存在映射： <span class="math display">\[\sigma: V \times \mathbb{F} \rightarrowV\]</span></p><p><span class="math display">\[(\alpha,k) \mapsto\sigma(\alpha,k)\]</span></p><p>即对集合V中的任意元素<span class="math inline">\(\alpha\)</span>和数域<span class="math inline">\(\mathbb{F}\)</span>中任意元素k，在集合V中都存在唯一元素<span class="math inline">\(\gamma\)</span>，使得<span class="math inline">\(\gamma=\alpha k \in V\)</span>，则称映射<span class="math inline">\(\sigma\)</span>为集合V上的数乘。</p><ul><li><p><strong>注1：关于映射的符号</strong><br>  设映射<span class="math inline">\(\sigma\)</span>为正弦函数<span class="math inline">\(sin(*)\)</span><br>  “<span class="math inline">\(\rightarrow\)</span>”表示将集合映射到集合。例如<span class="math inline">\(\sigma: R \rightarrow[-1,1]\)</span>，表示将实数集R映射到集合[-1,1]。<br>  “<span class="math inline">\(\mapsto\)</span>”表示将元素映射到元素。例如 <span class="math inline">\(\sigma: \pi \mapsto 0\)</span>，表示将元素<span class="math inline">\(\pi\)</span>映射到元素0。</p></li><li><p><strong>注2：集合的笛卡尔积</strong><br>  集合<span class="math inline">\(S_1\)</span>和<span class="math inline">\(S_2\)</span>的笛卡尔积的数学表示为： <span class="math display">\[S_1 \times S_1 = \{\begin{bmatrix}s_1\\s_2\\\end{bmatrix} \mid s_1 \in S_1,s_1 \in S_2\}\]</span></p></li><li><p><strong>注3：域的定义及常用的域</strong><br>  域的定义：包含加法与乘法的，满足通常运算规则的代数结构称为域。<br>  常用的域：<span class="math inline">\(\mathbb{Q}\)</span>(有理数域)、<span class="math inline">\(\mathbb{R}\)</span>(实数域)、<span class="math inline">\(\mathbb{C}\)</span>(复数域)等。</p></li></ul><h2 id="通常的运算规则">通常的运算规则</h2><ol type="1"><li><strong>加法交换律</strong><br>  已知非空集合V，对 <span class="math inline">\(\forall v_1,v_2 \inV\)</span>，有 <span class="math inline">\(v_1+v_2=v_2+v_1\)</span>。<br></li><li><strong>加法结合律</strong><br>  已知非空集合V，对 <span class="math inline">\(\forall v_1,v_2,v_3 \inV\)</span>，有 <span class="math inline">\((v_1+v_2)+v_3=v_1+(v_2+v_3)\)</span>。<br></li><li><strong>加法零元素</strong><br>  已知非空集合V，对 <span class="math inline">\(\forall v \in V, \existse \in V\)</span>，使得 <span class="math inline">\(e+v=v\)</span>。<br></li><li><strong>加法逆元素</strong><br>  已知非空集合V，对 <span class="math inline">\(\forall v \in V, \existsa \in V\)</span>，使得 <span class="math inline">\(v+a=e\)</span>，记<span class="math inline">\(a=-v\)</span>。<br></li><li><strong>数乘分配律</strong><br>  已知非空集合V和数域<span class="math inline">\(\mathbb{F}\)</span>，对<span class="math inline">\(\forall v_1,v_2 \in V, k \in\mathbb{F}\)</span>，有 <span class="math inline">\((v_1+v_2)k=v_1k+v_2k\)</span>。<br>  已知非空集合V和数域<span class="math inline">\(\mathbb{F}\)</span>，对<span class="math inline">\(\forall v \in V;k_1,k_2 \in\mathbb{F}\)</span>，有 <span class="math inline">\(v(k_1+k_2)=vk_1+vk_2\)</span>。<br></li><li><strong>数乘结合律</strong><br>  已知非空集合V和数域<span class="math inline">\(\mathbb{F}\)</span>，对<span class="math inline">\(\forall v \in V;k,l \in\mathbb{F}\)</span>，有 <span class="math inline">\((vk)l=v(kl)\)</span>。<br></li><li><strong>数乘单位元素</strong><br>  已知非空集合V和数域<span class="math inline">\(\mathbb{F}\)</span>，对<span class="math inline">\(\forall v \in V,\exists 1 \in\mathbb{F}\)</span>，使得 <span class="math inline">\(v1=v\)</span>。</li></ol><h2 id="线性空间的定义">线性空间的定义</h2><p>  <font color="#008000">若集合V满足<b>加法</b>与<b>数乘</b>两种运算，且这两种运算满足<b>通常的运算规则</b>，则称<b>集合V</b>关于此加法和数乘是<b>数域<span class="math inline">\(\mathbb{F}\)</span></b>上的线性空间。</font>一般也把这种线性空间称为向量空间，集合V中的元素称为向量。</p><h2 id="线性空间的具体实例">线性空间的具体实例</h2><h3 id="例1数域mathbbf上的标准线性空间mathbbfn">例1：数域<span class="math inline">\(\mathbb{F}\)</span>上的标准线性空间<span class="math inline">\(\mathbb{F}^n\)</span></h3><p>  已知数域<span class="math inline">\(\mathbb{F}\)</span>,设<br><span class="math display">\[V := \mathbb{F}^n=\mathbb{F} \times\mathbb{F} \times \dots \times \mathbb{F}=\{\begin{bmatrix}  v_1\\  v_2\\  \vdots\\  v_n\\\end{bmatrix} \mid v_i \in \mathbb{F},i=1, \dots,n\}\]</span></p><p>  对 <span class="math inline">\(\forall \alpha,\beta \in V, k \in\mathbb{F}\)</span>，<br>  定义集合V上的加法运算：<br><span class="math display">\[\alpha + \beta=\begin{bmatrix}  \alpha_1\\  \alpha_2\\  \vdots\\  \alpha_n\\\end{bmatrix}+\begin{bmatrix}  \beta_1\\  \beta_2\\  \vdots\\  \beta_n\\\end{bmatrix}=\begin{bmatrix}  \alpha_1+\beta_1\\  \alpha_2+\beta_2\\  \vdots\\  \alpha_n+\beta_n\\\end{bmatrix} \in V\]</span></p><p>  定义集合V上的数乘运算：<br><span class="math display">\[\alpha \cdot k=\begin{bmatrix}  \alpha_1\\  \alpha_2\\  \vdots\\  \alpha_n\\\end{bmatrix} \cdot k = \begin{bmatrix}  \alpha_1 k \\  \alpha_2 k \\  \vdots \\  \alpha_n k \\\end{bmatrix} \in V\]</span></p><p>  易证此加法与数乘满足通常的运算法则，此时称集合V为数域<span class="math inline">\(\mathbb{F}\)</span>上的n维标准线性空间，记为<span class="math inline">\(\mathbb{F}^n\)</span>。<br>  一些常用数域上的n维标准线性空间：<span class="math inline">\(\mathbb{R}^n\)</span>(实数域)、<span class="math inline">\(\mathbb{C}^n\)</span>(复数域)等。</p><h3 id="例2欧几里得空间作为线性空间">例2：欧几里得空间作为线性空间</h3>  令数域<span class="math inline">\(\mathbb{F}=\mathbb{R}\)</span>，集合<span class="math inline">\(V=\{欧几里得空间中的全体有向线段\}\)</span>。(当两条有向线段经过平移能够重叠时，则把这两条线段算做一条线段)<br>  定义集合V上的加法运算：向量运算的平行四边形法则。<br>  定义集合V上的数乘运算：向量同向或反向伸缩。<br><center class="half"><img src="https://s2.loli.net/2023/07/27/GNvpJQHgdrOLMRA.png" width="50%"><img src="https://s2.loli.net/2023/07/27/lFhM6DNEmVkRW7c.png" width="50%"><p>Image 1 向量的平行四边形法则            Image 2 向量的伸缩</p></center><p>  易证此加法与数乘满足通常的运算法则，则集合V是线性空间，说明欧几里得空间可以作为线性空间。</p><h3 id="例3函数空间作为线性空间">例3：函数空间作为线性空间</h3><p>  已知数域<span class="math inline">\(\mathbb{F}\)</span>，集合<span class="math inline">\(V=\mathcal{F}(I,\mathbb{F}^n)\)</span>。集合V为函数空间，V中的元素是以数域<span class="math inline">\(\mathbb{F}\)</span>中的区间<span class="math inline">\(I\)</span>为定义域，具有n个分量的n维向量值函数。例如：<br><span class="math display">\[f=\begin{bmatrix}  f_1(x) \\  f_2(x) \\\end{bmatrix}=\begin{bmatrix}  sin(x) \\  \frac{1}{2}x^3 \\\end{bmatrix}, f \in \mathcal{F}([-1,1],\mathbb{R}^2) \]</span></p><p>  对 <span class="math inline">\(\forall f,g \in\mathcal{F}(I,\mathbb{F}^n),k \in \mathbb{F}\)</span>，<br>  定义集合V上的加法运算：<br><span class="math display">\[f+g = \begin{bmatrix}  f_1(x) \\  f_2(x) \\  \vdots \\  f_n(x) \\\end{bmatrix}+\begin{bmatrix}  g_1(x) \\  g_2(x) \\  \vdots \\  g_n(x) \\\end{bmatrix} = \begin{bmatrix}  f_1(x)+g_1(x) \\  f_2(x)+g_2(x) \\  \vdots \\  f_n(x)+g_n(x) \\\end{bmatrix} \in \mathcal{F}(I,\mathbb{F}^n)\]</span></p><p>  定义集合V上的数乘运算：<br><span class="math display">\[f \cdot k = \begin{bmatrix}  f_1(x) \\  f_2(x) \\  \vdots \\  f_n(x) \\\end{bmatrix} \cdot k = \begin{bmatrix}  kf_1(x) \\  kf_2(x) \\  \vdots \\  kf_n(x) \\\end{bmatrix} \in \mathcal{F}(I,\mathbb{F}^n)\]</span></p><p>  易证此加法与数乘满足通常的运算法则，则集合V是线性空间，说明函数空间可以作为线性空间。</p>]]></content>
      
      
      <categories>
          
          <category> 矩阵分析 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>矩阵分析-0.引言</title>
      <link href="/2023/07/16/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90-0.%E5%BC%95%E8%A8%80/"/>
      <url>/2023/07/16/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90-0.%E5%BC%95%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="引言">引言</h1><p>  矩阵分析是笔者开启的第一个博客系列，之所以想把矩阵理论作为起点，是因为在统计与数据科学领域，矩阵是最基本也是最重要的数学工具，当我们在讨论高维空间、随机向量、多元正态分布这些统计领域最基本的概念时，我们都离不开矩阵这个数学工具。掌握矩阵理论，能够帮助我们更好地分析、处理高维空间中数学问题。</p><h2 id="矩阵分析的研究内容">矩阵分析的研究内容</h2><p>  与线性代数偏向于计算不同，矩阵分析的研究内容更加偏向于分析。矩阵分析的研究内容是非常广泛的，很难做到面面俱到，本博客的文章主要是参考一些主流的矩阵理论著作以及学习资料。以下是本系列打算讨论的一些重点内容：<br>1.<strong>线性空间</strong>：在研究问题时，我们通常把对象限定在某一个空间中，而线性空间便是代数中最基本的空间。从线性空间出发，我们会认识向量组、基、子空间等概念。<br>2.<strong>线性映射</strong>：当我们需要将一个线性空间中的对象映射到另一个线性空间时，我们便需要用到线性映射这个方法。基于线性映射，我们会讨论几何中的旋转变换、镜面反射等操作的矩阵表示。<br>3.<strong>矩阵等价与相似</strong>：矩阵的等价与相似是我们在线性代数中非常熟悉的概念，在矩阵分析中，我们将借助线性映射的概念进一步理解等价与相似的几何意义。另外，通过引入多项式矩阵以及Smith型、Jordan标准型等概念，我们将能够把较为复杂的矩阵相似问题转化为简单的矩阵等价问题。<br>4.<strong>内积</strong>：内积是解析几何中一个非常重要的概念，内积赋予空间向量以度量，使得我们可以定义范数、距离和角度等概念，从而建立内积空间的结构。内积空间是函数空间、向量空间和张量空间的基础。<br>5.<strong>矩阵微分</strong>：矩阵微积分是矩阵理论的重要组成部分。它对矩阵的导数、积分和微分方程进行了系统的研究，为解决矩阵和向量值函数的微分问题提供了理论基础。矩阵微分在机器学习、控制论等领域有广泛应用。<br>6.<strong>矩阵分解</strong>：矩阵分解是将一个矩阵拆解为多个简单矩阵或特殊形式矩阵的过程。矩阵分解在线性方程组求解、特征值计算、数据降维等方面有非常重要的作用。我们将会学习一些常见的矩阵分解技术，如LU分解、QR分解、奇异值分解等。</p><p>  以上是我打算在矩阵分析系列前期讨论的一些内容，当然，矩阵理论博大精深，远非一朝一夕能够掌握理解的，随着本人学习的深入，一些新的内容会陆续补充到这个系列中。</p><h2 id="矩阵分析的应用场景">矩阵分析的应用场景</h2><p>  矩阵理论在物理、控制、计算机等领域有着广泛的应用场景，由于本人是统计与数据科学领域的学生，所以我主要介绍一些矩阵理论在本领域的一些应用场景：</p><ul><li><strong>主成分分析（PCA）</strong>：PCA是一种常用的降维技术，它将高维数据转换为低维空间，同时最大程度保留原始数据的方差。PCA的核心是对数据协方差矩阵进行特征值分解，从而得到主成分。<br></li><li><strong>特征提取</strong>：在机器学习中，矩阵理论常用于特征提取。通过将数据矩阵进行降维、转换或者分解，可以得到更具有表征能力的特征，从而提高模型的性能。<br></li><li><strong>多元正态分布</strong>：在多元统计分析中，多元正态分布是一个重要的概率分布模型，用于描述多维随机变量的联合分布。矩阵理论提供了对多元正态分布的理论和应用支持，包括协方差矩阵、特征值分解、条件分布等。<br></li><li><strong>线性回归和广义线性模型</strong>：线性回归和广义线性模型是数据科学中常用的建模方法。它们使用矩阵来描述变量之间的线性关系，并通过矩阵求解技术来拟合模型和估计参数。<br></li><li><strong>时间序列分析</strong>：时间序列分析中，矩阵理论被用于处理多维时间序列数据，如协方差矩阵估计、谱分析等。<br></li><li><strong>神经网络</strong>：深度学习中的神经网络可以用矩阵表示网络的权重和输入输出。矩阵运算在神经网络的前向传播和反向传播过程中发挥着关键作用，实现模型的训练和优化。</li></ul><h2 id="愿景">愿景</h2><p>  矩阵分析是我开始写的第一个博客系列，我希望这个博客作为我学习笔记的同时，也能为读者解决遇到的问题。在我的想法中，我希望这个博客能一直处于更新状态，每当自己在矩阵理论方面有新的收获，便能把它记录在这里，愿自己能够一直坚持下来！</p><h2 id="相关学习资料">相关学习资料</h2><p>  矩阵理论有非常多的著作与学习资料，本博客主要参考的资料有：<br>* <a href="https://www.bilibili.com/video/BV1Em4y1r7ss/?spm_id_from=333.337.search-card.all.click&amp;vd_source=234cf2ac075a1558881a6956450ddf89">Video1：《矩阵论》-严质彬 哈工大</a><br>* <a href="https://www.bilibili.com/video/BV1b4411j7V3/?spm_id_from=333.337.search-card.all.click&amp;vd_source=234cf2ac075a1558881a6956450ddf89">Video2：《数据分析、信号处理和机器学习中的矩阵方法》-Gilbert Strang MIT</a><br>* <a href="https://github.com/SXUSongJH/Book">Book1：《矩阵分析与应用》(第二版)-张贤达</a><br>* <a href="https://github.com/SXUSongJH/Book">Book2：《MatrixAnalysis》(Sencond Edition) - Roger A.Horn</a></p><p>  在本系列的前期，将主要参考严质彬老师的课程。对于课程中没有涉及的内容，后期将借助其它几个资料进行补充。</p>]]></content>
      
      
      <categories>
          
          <category> 矩阵分析 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>这才是猛男该弹的曲子！！！</title>
      <link href="/2023/07/15/%E8%BF%99%E6%89%8D%E6%98%AF%E7%8C%9B%E7%94%B7%E8%AF%A5%E5%90%AC%E7%9A%84%E6%9B%B2%E5%AD%90/"/>
      <url>/2023/07/15/%E8%BF%99%E6%89%8D%E6%98%AF%E7%8C%9B%E7%94%B7%E8%AF%A5%E5%90%AC%E7%9A%84%E6%9B%B2%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>  无语，最近对于睫毛弯弯这个曲子特着迷，吉他老师在教我光辉岁月时，我满脑子都想的是睫毛弯弯<span class="github-emoji"><span>😂</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>小时候咋没发现这个旋律这么好听。不行，我早晚得出一期这首歌的弹唱<span class="github-emoji"><span>🎶</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f3b6.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><center><iframe src="//player.bilibili.com/player.html?aid=384390831&amp;bvid=BV1fZ4y1t7db&amp;cid=731251859&amp;page=1" width="300" height="200" title="【吉他独奏】睫毛弯弯(王心凌)" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></center>]]></content>
      
      
      <categories>
          
          <category> Daily </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
